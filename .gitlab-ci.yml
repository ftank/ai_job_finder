image: python:3.9

stages:
  - build
  - test
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

# Backend build and test
build_backend:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA ./backend
    - docker push $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA
  only:
    - main

test_backend:
  stage: test
  script:
    - pip install -r backend/requirements.txt
    - python -m pytest backend/tests/
  only:
    - main

# Frontend build and test
build_frontend:
  stage: build
  image: node:16
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/build/
  only:
    - main

test_frontend:
  stage: test
  image: node:16
  script:
    - cd frontend
    - npm install
    - npm test
  only:
    - main

# Deployment
deploy:
  stage: deploy
  image: python:3.9
  before_script:
    - pip install ansible
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - cd backend
    - ansible-playbook -i inventory.yml playbook.yml
  environment:
    name: production
  variables:
    DEPLOY_HOST: ${DEPLOY_HOST}
    DEPLOY_USER: ${DEPLOY_USER}
    DOMAIN_NAME: ${DOMAIN_NAME}
    OPENAI_API_KEY: ${OPENAI_API_KEY}
    LINKEDIN_CLIENT_ID: ${LINKEDIN_CLIENT_ID}
    LINKEDIN_CLIENT_SECRET: ${LINKEDIN_CLIENT_SECRET}
  only:
    - main 